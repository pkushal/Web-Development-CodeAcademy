HTML is used to establish a page's structure. It also lets us add text, links and images
CSS is used to control the design and layout of the page.

Heading elements h1 to h6; h1 used to describe the main heading
<h1> Main Heading </h1>

Paragraphs are described by p elements as <p> I am learing HTML. </p>

<a> is used to create links. It has two elements. First is the href attribute which equals the website you want to link to. Second you get to choose the name in the text that user sees on the page.
<a href ="https:// www.arsenal.com"> Click here to go to arsenal website </a>

<img> is for adding the image tags. <img src =" http://goo.gl/mbnqBl"> 
Here the src is the tag which has the address of the image.

<ul> and <li>
They present the content as lists. A bulleted list us made using a ul element and each item in the list is placed inside the li element.
<ul>
	<li> first </li>
	<li> second </li>

</ul>

<html> and <body>
Everything inside a webpge is nested inside the html element
The body element contains the actual content of the web page and everything inside the body will show up in the web browser.

<!DOCTYPE html> is not a HTML file but it ensures that the web page displays consistently when its visited from differernt browsers. It has no closing tag.

<!DOCTYPE html>
<html>
	<body>
		<h1> Web Development </h1>
		<p> I am learning the HTML tags </p>
	</body>
</html>

<div> </div> element groups othe elements together into sections of web page such as navigation bar, the main body and the footer

<div class = "nav">
</div>
The <div> tag defines a division or a section in an HTML document.

The <div> tag is used to group block-elements to format them with CSS.


Cascading Style Sheets (CSS):


h1 {
	color:red;
}
this will make the h1 elements to be in red color. This code is called the CSS rule. CSS rule contains a selector and property-value pairs. Here h1 is the selector, which selects all the h1 HTML elements on the page. Inside the {} there is property value pair. Color is the property and red is the value.

All the HTML elements can be the CSS selector. Another available selector is the class selector. HTML elements can carry a class attribute. 
<div class="header">
	<h2> Heading </h2>
	<p> Subtile</p>
</div>

Class can be targeted from the CSS using a dot (.) as 

.header{
	color: yellow;
}
In the above HTML code, this class selector will make the Heading and Subtitle in Yellow since they are grouped inside the div class called header.

Combining Selector:
We can combine the classes and the element names. The code below selects any p element nested inside the HTML class named header and sets the color to blue.
.header p{
	color: blue;
}

The color attribute only works for 140 colors. www.crockford.com/wrrrld/color.html

To have access to more than 140 colors, we can use RGB values or hexadecimal numbers (0-255) or (00 - ff) with 255 and ff being the brightest.

.jumbotron h1{
	color: rgb(254, 193,123);
}
OR
.jumbotron h1{
	color: #9933CC;
}


Font family sets the font of HTML element's text. Three commonly used font-family are
1. font-family: Arial, Helvetica, sans-serif;
2. font-family: "Times New Roman", Times, serif;
3. font-family: "Courier New", Courier, monospace;

.jumbotron h1{
	color: rgb(254, 193,123);
	font-family: 'Shift', san-serif;
}

font-size: set the size of the HTML elements text. It can be measured in pixels, ems ans rems.
.jumbotron h1{
	color: rgb(254, 193,123);
	font-family: 'Shift', san-serif;
	font-size: 48px;
}

background-color sets the color for the backgrond of an HTML element
.jumbotron h1{
	background-color: #0099cc;
}

background-image: sets an image as the background of an HTML element

.jumbotron h1{
	background-image: url('http://goo.gl.ODpi3y');
}

border property sets the width, style and color of an element's border
.jumbotron h1{
	border: 3px solid #cc0000;	
}
This will set the border around the h1 element within the jumbotron class to a border of thickness of 3px, solid style and color as #cc0000.

padding property creates space between the content and border of an element on 4 all sides. padding-top, padding-bottom, padding-left, padding-right set the padding on specific sides.

.jumbotron h1{
	padding: 11px;
	border: 3px solid #cc0000;	
}

margin property creates space for multiple HTML elements. The margin is  a transapent area outside the border of an element. Its just like adding a transparent border layer outsise the border but it will shrink (shift) the actual border in all direction. margin-left, margin-right, margin-top and margin-bottom are available to set the margins in each side of HTML element.
.jumbotron h1{
	padding: 11px;
	margin: 2px;
	border: 3px solid #cc0000;	
}

margin-right:auto will move the element to the far left of the screen. The margin is on the right and the element is then moved/pushed to the far left.
To center the element, set margin-left:auto and margin-right: auto
.jumbotron h1{
	margin-left: auto;
	margin-right: auto;
	border: 3px, dotted, #ffffff;
}

How to link the HTML file and the CSS file:

<head> and <link>

The head element contains information that the web browser needs to display the page. <head> </head>
The link element tll the browser where to find the CSS file used to style the page. The href attribute gives the browser the path the CSS file. The rel attribute tel the browser that the file being linked is a CSS file to style the page.

<!DOCTYPE html>
<html>
	<head>
		<link href="main.css" rel="stylesheet"/>
	</head>

	<body>
		<h1>Heading</h1>
		<p>Paragraph</p>
	</body>
</html>

There are also other CSS rules like font-weight: bold, text-transform: uppercase etc

.jumbotron h1{
	height:500px;
}
The height rule will make the size of that div group to 500 pixels.

While adding the links in the head in the html file, the sequence of the link file matters.






CSS Positioning section:
CSS can also control where an element sits on a page to create a page layout.

display

CSS treats HTML elements like boxes. A box can be "block" or "inline".

    Block elements display on a new line (e.g., h1, p, ul, li).

    Inline elements display on the same line as their neighboring elements (e.g., img, a)

It's possible to change whether a box is block or inline by using the display property.



position

The position property is used to move an HTML element to a precise position on the page.

By setting position: relative, you can use the CSS properties top, left, bottom, and right to shift an element away from where it would have normally appeared on the page.

.jumbotron h1 {
  position: relative;
  top: 91px;
  left: 55px;
}


float

The float property moves an element to the far left or far right of the page.

For example, setting float: right pulls an element to the far right side of the page, and the surrounding text wraps around it.
img {
float:right;
}

.learn-more {
clear:both;
}
The clear property turns off the float, so the "Learn More" section returns to its normal flow on the page.

Bootstrap:
Bootstrap is a collection of prewritten CSS rules used to build web pages faster. Bootstrap provides styles out of the box for several common components on a web page, such as grid layouts, navigation, showcases, and much more.


The grid

A grid is a useful way to create page layouts. Rather than create layouts from scratch, HTML elements can be aligned to a grid in different ways to create custom layouts.

Bootstrap comes with a grid that is made up of 12 equal-sized columns. HTML elements are arranged to span different numbers of columns in order to create custom page layouts.
<div class="row">

  <div class="col-md-6">
    <h4>Content 1</h4>
  </div>

  <div class="col-md-6">
    <h4>Content 2</h4>
  </div>

</div>
Bootstrap's grid is made up of 12 equal-sized columns. Each piece of content is aligned to this grid by specifying the number of columns to span. Here each piece of content spans six columns, so it uses the .col-md-6 class. Both columns are wrapped in a .row class to create a horizontal group.
Also we can do as below to  create uneven partition.

<div class="row">

	<div class="col-md-8">
		<h4>Content 1</h4>
	</div>

	<div class="col-md-4">
		<h4>Content 2</h4>
	</div>

</div>



Tabs

Tabs are a common navigation technique that give links to different parts of a site.
Setting Class=  nav nav-tabs will convert the lists to the tabs
<ul class="nav nav-tabs ">
	<li><a href="#">Primary</a></li>
	<li class="active"><a href="#">Social</a></li>
	<li><a href="#">Promotions</a></li>
	<li><a href="#">Updates</a></li>
</ul>

Setting <li class="active"> will make the tab look active.





Pills

Pills are a set of buttons that give links to different parts of a site. Pills are seen in sites like Google's search results page.

Replace nav-tabs to nav-pills to get the look like buttons
<ul class="nav nav-pills">
	<li><a href="#">Primary</a></li>
	<li class="active"><a href="#">Social</a></li>
	<li><a href="#">Promotions</a></li>
	<li><a href="#">Updates</a></li>
</ul>




Jumbotron

Many sites have a large showcase area featuring important content.

The order of the CSS files matter.
1. The browser first sees shift.css, and makes the Shift font available to use in the page
2. Next the browser sees bootstrap.css, and applies those styles to the page.
3. Then the browser sees main.css, and applies those custom styles to the page. The custom styles override the Bootstrap styles.

The order of the CSS files tell the browser that your styles in main.css are more important than the styles in bootstrap.css, so the final page that loads is the customized web page.

  <head>
    <link href="http://s3.amazonaws.com/codecademy-content/courses/ltp/css/bootstrap.css"  rel="stylesheet">
    <link href="http://s3.amazonaws.com/codecademy-content/courses/ltp/css/shift.css" rel="stylesheet">
    <link href="main.css" rel="stylesheet">
    
  </head>

  Bootstrap provides the .pull-left class to left-align an element, and the .pull-right class to right-align an element. 

   <div class="nav">
      <div class="container">
        <ul class="pull-left">
          <li><a href="#">Name</a></li>
          <li><a href="#">Browse</a></li>
        </ul>
        <ul class="pull-right">
          <li><a href="#">Sign Up</a></li>
          <li><a href="#">Log In</a></li>
          <li><a href="#">Help</a></li>
        </ul>
      </div>
    </div>